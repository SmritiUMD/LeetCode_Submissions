
//using stack

class Solution {
public:
    int largestRectangleArea(vector<int>& heights) {
        stack<int> s;
        int area=0;
        int maxArea=0;
        int i;
    for(i=0;i<heights.size();){
        // push indices in the stack till we get increasing heights
        if(s.empty() || heights[s.top()]<=heights[i]){
            s.push(i++);
          }else{
            //if not start removing elements from stack till we get a height equal to
            // current height or empty stack and calculate the area
            int top=s.top();
            s.pop();
            if(s.empty()) area=heights[top]*i; // when stack is empty
            else area=heights[top]*(i-s.top()-1);//if stack is not empty calculate in this way
            if(area > maxArea) maxArea = area;
        }
    } 
        // once insertion is done start removing elements in this way
        while(!s.empty()){
            int top=s.top();
            s.pop();
            if(s.empty()) area=heights[top]*i;
            else area=heights[top]*(i-s.top()-1);
            if(area > maxArea) maxArea = area;
        }
        return maxArea;
    }
};
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
    
