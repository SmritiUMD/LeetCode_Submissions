/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
     
public:
    void helper(TreeNode* node, int level,vector<vector<int>>& s){
        
        if(level<s.size()){
            vector<int>temp=s[level];
            temp.push_back(node->val);
            s[level]=temp;
        }
        else{
            vector<int> temp;
            temp.push_back(node->val);
            s.push_back(temp);
        }
  
        if(node->left!=NULL){
            helper(node->left, level+1,s);
        }
        if(node->right){
            helper(node->right,level+1,s);
        }
    }
public:
    vector<vector<int>> levelOrderBottom(TreeNode* root) {
        vector<vector<int>>s;
        int level=0;
        if(root==NULL)
            return s;
        helper(root,0,s);
        reverse(s.begin(),s.end());
        return s;
    }
};
