# sort the intervals.
#add first vector into temp and compare the intervals such that second element of temp is greater than first element of next vector.



class Solution {
public:
    vector<vector<int>> merge(vector<vector<int>>& intervals) {
        vector<vector<int>>final_r;
        vector<int>last;
        sort(intervals.begin(),intervals.end());
       
        if(intervals.size()==0 ){
           
            return intervals;
        }
        auto temp = intervals[0];
      
        if(!intervals.empty()) {
        for(int i=0;i<intervals.size();i++){
             vector<int>result;
            for(int j=0;j<intervals[0].size();j++){
                if(temp[1]>=intervals[i][0]){
                   temp[1]=max(temp[1],intervals[i][1]);
                  }
                else{
                    final_r.push_back(temp);
                    temp=intervals[i];
                }
            }
        }
            final_r.push_back(temp);
        }
            return final_r;
        
    }
};
