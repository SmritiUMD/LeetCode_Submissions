### For level order traversal, one queue is sufficient but in this question we need zigzag traversal, so I have used two stacks.
class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
         vector<vector<int>>result;
        stack<TreeNode*>s1;
        stack<TreeNode*>s2;
        s1.push(root);
        if(!root) return result;
        while(!s1.empty() || !s2.empty()){
          
            vector<int> temp;
            while(!s1.empty()){
                auto t=s1.top();
                s1.pop();
                if(t->left) s2.push(t->left);
                if(t->right) s2.push(t->right);
                 temp.push_back(t->val);
            }
            result.push_back(temp);
            vector<int>temp2;

               while(!s2.empty()){
                     auto t=s2.top();
                     s2.pop();
                     if(t->right) s1.push(t->right);
                     if(t->left) s1.push(t->left);   
                     temp2.push_back(t->val);
            }
            if(temp2.size()>0)
             result.push_back(temp2);
          
        }
        return result;
        
        
    }
};
