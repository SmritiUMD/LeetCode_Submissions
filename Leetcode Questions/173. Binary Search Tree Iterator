/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class BSTIterator {
    vector<int>values;
    int index;
public:
    BSTIterator(TreeNode* root) {
        
        this->index=-1;
        this->inorder(root);
    }
    
    int next() {
     
        return this->values[++this->index];
        
    }
    
    void inorder(TreeNode* root){
        if(!root) return ;
        this->inorder(root->left);
        values.push_back(root->val);
        this->inorder(root->right);
    }
    
    bool hasNext() {
      
        return index+1<values.size();
        
    }
};

/**
 * Your BSTIterator object will be instantiated and called as such:
 * BSTIterator* obj = new BSTIterator(root);
 * int param_1 = obj->next();
 * bool param_2 = obj->hasNext();
 */
