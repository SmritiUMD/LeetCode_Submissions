two pointer method

class Solution {
    
public:
    
     void twoSum(vector<int> &nums, int i, vector<vector<int>> &fin){
            int l=i+1, h=nums.size()-1;
            while(l<h){
                int sum= nums[i]+nums[l]+nums[h];
                if(sum<0) l++;
                else if(sum>0) h--;
                else{
                    fin.push_back({nums[i], nums[l++], nums[h--]});
                    ///to avoid duplicates
                    while(l<h && nums[l]==nums[l-1]){
                        l++;
                    }
                }
            }
        }
        
vector<vector<int>> threeSum(vector<int>& nums) {
        sort(nums.begin(), nums.end());
        vector<vector<int>>fin;
        for(int i=0;i<nums.size() && nums[i]<=0;i++){
            if(i==0 || nums[i-1] !=nums[i]){
                twoSum(nums,i,fin);
            }
           
        }
     return fin;        
   
        
    }
};

complexity = O(log n + n^2);
