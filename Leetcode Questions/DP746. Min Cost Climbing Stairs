class Solution {
public:
    int minCostClimbingStairs(vector<int>& cost) {
        vector<int>dp(cost.size()+1,0);
        dp[0]=cost[0];
        dp[1]=cost[1];
        if(cost.size()==2) return min(cost[1],cost[0]);
        for(int i=2;i<=cost.size()-1;i++){
           dp[i]=cost[i]+min(dp[i-1],dp[i-2]);
            cout<<dp[i]<<endl;
            
        }
        cout<<cost.size()-1;
        // return the min of last and previous to last;
       return min(dp[cost.size()-1],dp[cost.size()-2]); 
    }
};
